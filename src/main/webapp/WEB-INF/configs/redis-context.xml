<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/redis
        http://www.springframework.org/schema/redis/spring-redis.xsd">

    <!-- JedisPoolConfig 连接池参数配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.pool.maxTotal}"
          p:maxIdle="${redis.pool.maxIdle}"
          p:minIdle="${redis.pool.minIdle}"
          p:maxWaitMillis="${redis.pool.maxWaitMillis}"
          p:testOnBorrow="${redis.pool.testOnBorrow}"/>

    <!-- 配置 JedisConnectionFactory 来通过服务器或者连接池的方式获取 redis 服务器的连接 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}"
          p:port="${redis.port}"
          p:password="${redis.pass}"
          p:pool-config-ref="poolConfig"/>

    <!-- 序列化 -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="valueSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <!-- redis 模板配置 spring-data-redis 提供了一个基础的泛型 RedisTemplate 封装了基础的 crud 操作 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"
          p:defaultSerializer-ref="valueSerializer"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="valueSerializer"/>

    <!-- 消息监听容器声明 -->
    <bean id="messageDelegate" class="com.coeligena.listener.DefaultMessageDelegate"/>

    <!-- 消息接收和分派到侦听器中 -->
    <redis:listener-container connection-factory="jedisConnectionFactory">
        <!-- 定义 topic 可以是具体的 channel 的名字也可以是 Pattern，多个频道（主题）用空格隔开即可 -->
        <!-- 动态发布处理队列 -->
        <redis:listener ref="messageDelegate" method="feedHandleMessage"
                        serializer="valueSerializer" topic="feedHandler"/>
        <!-- 取消动态处理队列 -->
        <redis:listener ref="messageDelegate" method="cancelFeedHandleMessage"
                        serializer="valueSerializer" topic="cancelFeedHandler"/>
        <!-- 用户关注取关处理队列 -->
        <redis:listener ref="messageDelegate" method="followHandleMessage"
                        serializer="valueSerializer" topic="followHandler"/>
    </redis:listener-container>
</beans>